---
clusterName: "logstash"
nodeGroup: "parser"
nodePort: "enabled"
nodePortIp: "auto"
zone: "01"

replicas: 1
minimumMasterNodes: 1

# Extra environment variables to append
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs:
#  - name: MY_ENVIRONMENT_VAR
#    value: the_value_goes_here

# A list of secrets and their paths to mount inside the pod
# This is useful for mounting certificates for security and for mounting
# the X-Pack license
secretMounts: 
#  - name: logstash-keystore
#    secretName: logstash-keystore
#    path: /usr/share/elasticsearch/config/keystore

image: "docker.elastic.co/logstash/logstash"
imageTag: "7.3.2"
imageApi: "batrako/logstash-api"
imageTagApi: "latest"
imagePullPolicy: "IfNotPresent"

lsJavaOpts: "-Xmx1g -Xms1g"

configReloadAutomatic: "true"


resources:
  requests:
    cpu: "100m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

networkHost: "0.0.0.0"

# By default this will make sure two pods don't end up on the same node
# Changing this to a region would allow you to spread pods across regions
antiAffinityTopologyKey: "kubernetes.io/hostname" 

# Hard means that by default pods will only be scheduled if there are enough nodes for them
# and that they will never end up on the same node. Setting this to soft will do this "best effort"
antiAffinity: "hard"

# The default is to deploy all pods serially. By setting this to parallel all pods are started at
# the same time when bootstrapping the cluster
podManagementPolicy: "Parallel"

protocol: http
httpPort: 9600
httpPortApi: 9500


updateStrategy: RollingUpdate

# This is the max unavailable setting for the pod disruption budget
# The default value of 1 will make sure that kubernetes won't allow more than 1
# of your pods to be unavailable during maintenance
maxUnavailable: 1

 # GroupID for the elasticsearch user. The official elastic docker images always have the id of 1000
fsGroup: 1000 

# How long to wait for elasticsearch to stop gracefully
terminationGracePeriod: 120


readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

imagePullSecrets: []
nodeSelector: {}
tolerations: []

# Enabling this will publically expose your Elasticsearch instance.
# Only enable this if you have security enabled on your cluster
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

config:
  dynamicProvision: true
  accessModes: [ "ReadWriteMany" ]
  storageClassName: "standard"
  resources:
    request:
      storage: 1Mi